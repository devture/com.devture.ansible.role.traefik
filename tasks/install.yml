---

- name: Ensure Traefik paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "0750"
    owner: "{{ devture_traefik_uid }}"
    group: "{{ devture_traefik_gid }}"
  when: item.when | bool
  with_items:
    - path: "{{ devture_traefik_base_path }}"
      when: true
    - path: "{{ devture_traefik_config_dir_path }}"
      when: true
    - path: "{{ devture_traefik_ssl_dir_path }}"
      when: "{{ devture_traefik_ssl_dir_enabled }}"

- when: devture_traefik_dashboard_basicauth_enabled | bool
  block:
    # We do this locally, so that we won't need passlib to be installed on the server.
    - name: Generate basic auth file locally
      community.general.htpasswd:
        path: "{{ devture_traefik_dashboard_basicauth_file_tmp }}"
        name: "{{ devture_traefik_dashboard_basicauth_user }}"
        password: "{{ devture_traefik_dashboard_basicauth_password }}"
        mode: 0640
      become: false
      delegate_to: 127.0.0.1

    - name: Load basic auth file contents
      ansible.builtin.slurp:
        src: "{{ devture_traefik_dashboard_basicauth_file_tmp }}"
      become: false
      delegate_to: 127.0.0.1
      register: devture_traefik_dashboard_basicauth_file_contents_raw

    - name: Load basic auth file contents
      ansible.builtin.set_fact:
        devture_traefik_dashboard_basicauth_file_contents: "{{ devture_traefik_dashboard_basicauth_file_contents_raw['content'] | b64decode }}"

    - name: Ensure local temporary basic auth file is removed
      ansible.builtin.file:
        path: "{{ devture_traefik_dashboard_basicauth_file_tmp }}"
        state: absent
      become: false
      delegate_to: 127.0.0.1

- name: Ensure Traefik additional files installed
  when: devture_traefik_additional_config_files_content != [] | bool
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ devture_traefik_config_dir_path }}/{{ item.name }}"
    owner: "{{ devture_traefik_uid }}"
    group: "{{ devture_traefik_gid }}"
    mode: 0640
  loop: "{{ devture_traefik_additional_config_files_content }}"
  loop_control:
    label: "{{ item.name }}"

- name: Ensure Traefik environment variables installed
  ansible.builtin.copy:
    content: "{{ devture_traefik_environment_variables }}"
    dest: "{{ devture_traefik_config_dir_path }}/env"
    owner: "{{ devture_traefik_uid }}"
    group: "{{ devture_traefik_gid }}"
    mode: 0640

- name: Ensure Traefik labels file installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/labels.j2"
    dest: "{{ devture_traefik_config_dir_path }}/labels"
    owner: "{{ devture_traefik_uid }}"
    group: "{{ devture_traefik_gid }}"
    mode: 0640

- name: Ensure traefik.yml installed
  ansible.builtin.copy:
    content: "{{ devture_traefik_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ devture_traefik_config_dir_path }}/traefik.yml"
    owner: "{{ devture_traefik_uid }}"
    group: "{{ devture_traefik_gid }}"
    mode: 0640

- name: Ensure provider.yml installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/provider.yml.j2"
    dest: "{{ devture_traefik_config_dir_path }}/provider.yml"
    owner: "{{ devture_traefik_uid }}"
    group: "{{ devture_traefik_gid }}"
    mode: 0640

# If the Docker API is accessed through a UNIX socket (like we do by default), the container is run as root,
# which means that the acme.json file is also created as root. For such a privilege container, this root-owned file is OK.
#
# When switching to accessing the Docker API via TCP, we run the container with a regular user.
# An already existing acme.json (owned by root:root) won't be accessible and needs to be fixed up.
- when: not devture_traefik_config_providers_docker_endpoint_is_unix_socket
  name: Ensure acme.json file ownership is correct
  block:
    - name: Check existence of acme.json file
      ansible.builtin.stat:
        path: "{{ devture_traefik_ssl_dir_path }}/acme.json"
      register: devture_traefik_ssl_acme_json_stat

    - when: devture_traefik_ssl_acme_json_stat.stat.exists | bool
      name: Ensure acme.json file ownership set correctly
      ansible.builtin.file:
        path: "{{ devture_traefik_ssl_dir_path }}/acme.json"
        owner: "{{ devture_traefik_uid }}"
        group: "{{ devture_traefik_gid }}"

- name: Ensure Traefik container image is pulled via community.docker.docker_image
  when: devture_systemd_docker_base_container_image_pull_method == 'ansible-module'
  community.docker.docker_image:
    name: "{{ devture_traefik_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"  # noqa args
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Traefik container image is pulled via command
  when: devture_systemd_docker_base_container_image_pull_method == 'command'
  ansible.builtin.command:
    cmd: "{{ devture_systemd_docker_base_host_command_docker }} pull {{ devture_traefik_container_image }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Traefik container network exists via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    name: "{{ devture_traefik_container_network }}"

- name: Ensure Traefik container network exists via command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: "{{ devture_systemd_docker_base_host_command_docker }} network create {{ devture_traefik_container_network }}"
  register: network_creation_result
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Traefik systemd service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/devture-traefik.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ devture_traefik_identifier }}.service"
    mode: 0644
